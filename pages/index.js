import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { useState, useEffect } from "react";
import { TezosToolkit } from "@taquito/taquito";
import { BeaconWallet } from "@taquito/beacon-wallet";
import config from "../utils/config";
import {
  connectWallet,
  disconnectWallet,
  getActiveAccount,
  checkIfWalletConnected,
} from "../utils/wallet";

export default function Home() {
  const [formInput, updateFormInput] = useState("next");
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [wallet, setWallet] = useState(null);
  // const rpc = "https://rpc.ghostnet.teztnets.xyz/";
  const Tezos = new TezosToolkit(config.rpc);
  const options = {
    name: "Blocky",
    iconUrl: config.logo,
    preferredNetwork: config.network,
  };
  const isConnectWallet = async () => {
    const { wallet } = await connectWallet();
    setWallet(wallet);
  };
  const getStorage = async () => {
    let contract = await Tezos.contract.at(
      "KT1WdFvUhwFzEsrQzsL7uhYAubQECnktVvge"
    );
    let storage = await contract.storage();
    console.log(storage);
    contract = await Tezos.contract.at("KT19mTC36Mt27bP2UbekgF4seffMoWAQxgdB");
    storage = await contract.storage();
    console.log(storage);
  };

  const mintNFT = async () => {
    Tezos.setWalletProvider(wallet);

    const contract = await Tezos.wallet.at(config.NFTcontractAddress);
    console.log(contract);
    const op = await contract.methods.mint().send();
    await op.confirmation();
    console.log("hEeere");
  };
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to{" "}
          <a id={formInput} href="https://nextjs.org">
            Next.js!
          </a>
        </h1>

        <input
          className={styles.input}
          placeholder="Description"
          onChange={(e) => updateFormInput(e.target.value)}
        />

        {!wallet ? (
          <button onClick={isConnectWallet}>Connect Wallet</button>
        ) : (
          <p>Your address : {wallet}</p>
        )}

        <button onClick={getStorage}>Get storage</button>

        {wallet ? <button onClick={mintNFT}>Mint NFT</button> : ""}
        {/*
        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.js</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
        */}
      </main>
    </div>
  );
}
